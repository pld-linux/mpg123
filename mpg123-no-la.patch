--- mpg123-1.12.3/src/module.c.orig	2010-07-05 00:03:03.000000000 +0200
+++ mpg123-1.12.3/src/module.c	2010-08-12 16:06:12.000000000 +0200
@@ -20,7 +20,7 @@
 #error Cannot build without LTDL library support
 #endif
 
-#define MODULE_FILE_SUFFIX		".la"
+#define MODULE_FILE_SUFFIX		".so"
 #define MODULE_SYMBOL_PREFIX 	"mpg123_"
 #define MODULE_SYMBOL_SUFFIX 	"_module_info"
 
@@ -102,14 +102,11 @@
 	size_t module_path_len = 0;
 	char* module_symbol = NULL;
 	size_t module_symbol_len = 0;
-	char *workdir = NULL;
 	char *moddir  = NULL;
-	workdir = get_the_cwd();
 	moddir  = get_module_dir();
-	if(workdir == NULL || moddir == NULL)
+	if(moddir == NULL)
 	{
-		error("Failure getting workdir or moddir!");
-		if(workdir != NULL) free(workdir);
+		error("Failure getting moddir!");
 		if(moddir  != NULL) free(moddir);
 		return NULL;
 	}
@@ -117,20 +114,15 @@
 	/* Initialize libltdl */
 	if (lt_dlinit()) error( "Failed to initialise libltdl" );
 
-	if(chdir(moddir) != 0)
-	{
-		error2("Failed to enter module directory %s: %s", moddir, strerror(errno));
-		goto om_bad;
-	}
 	/* Work out the path of the module to open */
 	/* Note that we need to open ./file, not just file! */
-	module_path_len = 2 + strlen(type) + 1 + strlen(name) + strlen(MODULE_FILE_SUFFIX) + 1;
+	module_path_len = strlen(moddir) + 1 + strlen(type) + 1 + strlen(name) + strlen(MODULE_FILE_SUFFIX) + 1;
 	module_path = malloc( module_path_len );
 	if (module_path == NULL) {
 		error1( "Failed to allocate memory for module name: %s", strerror(errno) );
 		goto om_bad;
 	}
-	snprintf( module_path, module_path_len, "./%s_%s%s", type, name, MODULE_FILE_SUFFIX );
+	snprintf( module_path, module_path_len, "%s/%s_%s%s", moddir, type, name, MODULE_FILE_SUFFIX );
 	/* Display the path of the module created */
 	if(param.verbose > 1) fprintf(stderr, "Module path: %s\n", module_path );
 
@@ -179,9 +171,7 @@
 om_bad:
 	module = NULL;
 om_end:
-	chdir(workdir);
 	free(moddir);
-	free(workdir);
 	return module;
 }
 
